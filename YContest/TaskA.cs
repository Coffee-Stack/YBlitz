using System.IO;
using System.Linq;

namespace YContest
{
    public static class TaskA
    {
        // Игра

        // Ограничение времени 	2 секунды
        // Ограничение памяти 	64Mb
        // Ввод    стандартный ввод или input.txt
        // Вывод стандартный вывод или output.txt

        // Петя и Вася играют в игру: они по очереди берут из колоды карточки, на которых написаны целые неповторяющиеся положительные числа (первый карточку всегда берет Петя). 
        // Карточки игроки берут по одной сверху колоды. После этого они сравнивают значения, записанные на карточках: игрок, у которого меньше, тянет ещё одну карточку и оставляет её у себя. 
        // Когда все карточки заканчиваются, Петя и Вася считают сумму значений, написанных на этих карточках. Проигрывает тот, у кого сумма получается меньше, чем у другого игрока.
        // Им надоело вручную тянуть карточки и сравнивать значения.Они попросили вас написать программу, которая по исходному набору карточек будет определять победителя.
        // Гарантируется, что для любого теста победителя можно будет определить однозначно.

        // Формат ввода
        // В первой строке входных данных записано целое число n, кратное трём, — общее количество карточек(3≤n≤999).
        // В следующей строке записаны n различных целых положительных чисел ai — значения, написанные на карточках в том порядке, в котором Петя и Вася будут их раздавать(1≤ai≤1000).

        // Формат вывода
        // В единственной строке выведите Petya, если в игре побеждает Петя, или Vasya, если в игре побеждает Вася.

        // Пример 1:
        // Ввод 
        // 3
        // 1 2 3
        // Вывод
        // Petya
        // 
        // Пример 2:
        // Ввод
        // 3
        // 1 4 2
        // Вывод	
        // Vasya

        public static void Solve(StreamReader rdr, StreamWriter wr)
        {
            var cnt = int.Parse(rdr.ReadLine());
            var cards = rdr.ReadLine().Split(' ').Select(int.Parse).ToArray();

            int playerV = 0;
            int playerP = 0;
            for (int i = 0; i < cnt; i += 3)
            {
                playerP += cards[i];
                playerV += cards[i + 1];

                if (cards[i] < cards[i + 1])
                    playerP += cards[i + 2];
                else
                    playerV += cards[i + 2];
            }

            wr.Write(playerV > playerP ? "Vasya" : "Petya");
        }
    }
}